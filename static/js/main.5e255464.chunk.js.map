{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","validate","firstnameError","LastNameError","EmailError","state","name","Email","includes","setState","handleSubmit","e","preventDefault","console","log","firstname","LastName","Country","alert","error","handleChange","event","isCheckbox","target","type","checked","value","CountryError","className","href","onSubmit","this","noValidate","id","placeholder","height","style","color","class","fontSize","textDecoration","htmlFor","onChange","requireds","textAlign","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e255464.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n//import logo from './logo.svg';\nimport \"./App.css\";\n//const FormValid = ({ FormErrors }) => {\n//  let valid = true;\n//  Object.values(FormErrors).forEach(val => {\n//   val.length > 0 && (valid = false);\n// });\n//// return valid;\n//};\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: \"\",\n      LastName: \"\",\n      Email: \"\",\n      Country: \"\",\n      firstnameError: \"\",\n      LastNameError: \"\",\n      EmailError: \"\",\n      CountryError: \"\"\n    };\n  }\n\n  validate = () => {\n    let firstnameError = \"\";\n    let LastNameError = \"\";\n    let EmailError = \"\";\n    // let CountryError= \"\";\n\n    if (!this.state.name) {\n      firstnameError = \"name cannot be blank\";\n    }\n    if (!this.state.name) {\n      LastNameError = \"name cannot be blank\";\n    }\n    if (!this.state.Email.includes(\"@\")) {\n      EmailError = \"invalid email\";\n    }\n\n    if (EmailError || firstnameError || LastNameError) {\n      this.setState({ EmailError, firstnameError, LastNameError });\n\n      return false;\n    }\n\n    return true;\n    alert(\"The form is being submitted!!!\");\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const FormValid = this.validate();\n\n    if (FormValid) {\n      console.log(`\n        ---SUBMITTING---\n        First Name: ${this.state.firstname}\n        Last Name: ${this.state.LastName}\n        Email: ${this.state.Email}\n        Country: ${this.state.Country}\n            \n      `);\n      alert(`\n      ---SUBMITTING---\n        First Name: ${this.state.firstname}\n        Last Name: ${this.state.LastName}\n        Email: ${this.state.Email}\n        Country: ${this.state.Country}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n    this.setState({\n      firstname: \"\",\n      LastName: \"\",\n      Email: \"\",\n      Country: \"\"\n    });\n  };\n  handleChange /* e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let firstnameError = \"\";\n    let LastNameError = \"\";\n    let EmailError = \"\"; */ = event => {\n    event.preventDefault();\n    const isCheckbox = event.target.type === \"checkbox\";\n    this.setState({\n      [event.target.name]: isCheckbox\n        ? event.target.checked\n        : event.target.value\n    });\n  };\n\n  /*  if (!this.state.firstname) {\n      firstnameError = value.length < 3 ? \"Please input your name\" : \"\";\n    }\n    if (!this.state.LastName) {\n      LastNameError = value.length < 3 ? \"Please input your name\" : \"\";\n    }\n    if (!this.state.Email.includes(\"@wfp\")) {\n      EmailError = \"Invalid\";\n    } */\n  //if (!this.state.Country) {\n  //   CountryError = value.length < 3 ? \"please select a country\" : \"\";\n  /* // }\n    this.setState(\n      { firstnameError, LastNameError, EmailError, [name]: value },\n      () => console.log(this.state)\n    );\n  };\n */\n  render() {\n    return (\n      <div className=\"Wrapper\">\n        <header className=\"App-header\">\n          <h1>Library and Research Centre User Survey(EN)</h1>\n          <p>\n            Thank you for participating in this survey, to enable us understand\n            user experience and improve where necessary\n          </p>\n          <div>\n            For Any questions contact us at{\" \"}\n            <a\n              className=\"App-link\"\n              href=\"global.libraryresearchservice@wfp.org\"\n              target=\"_blank\"\n            >\n              global.libraryresearchservice@wfp.org\n            </a>\n          </div>\n        </header>\n        <div className=\"formlayout\">\n          <form onSubmit={this.handleSubmit} noValidate>\n            <div className=\"QUESTIONAIRE\">\n              <h2 id=\"QUESTIONAIRE\">QUESTIONAIRE</h2>\n            </div>\n            <div className=\"QUESTIONAIRE\">\n              1.Did you recently make use of the Library and Research Centre\n              (LRC) services or premises?<br></br>\n              <span>\n                <input type=\"radio\" name=\"yes\" value=\"yes\" /> Yes <br></br>\n                <input type=\"radio\" name=\"No\" value=\"no\" /> No\n              </span>\n              <br></br> <br></br>\n              2.Why have you not made use of the LRC services?<br></br>\n              <span>\n                <input\n                  type=\"checkbox\"\n                  name=\"chooseone\"\n                  value=\"The services are in English whereas I am fluent in another language (specify in the comment below)\"\n                />\n                The services are in English whereas I am fluent in another\n                language (specify in the comment below)<br></br>\n                <input\n                  type=\"checkbox\"\n                  name=\"chooseone\"\n                  value=\"I did not think of consulting the LRC when I should have\"\n                />\n                I did not think of consulting the LRC when I should have\n                <br></br>\n                <input\n                  type=\"checkbox\"\n                  name=\"chooseone\"\n                  value=\"I did not get a satisfactory reply from the LRC\"\n                />\n                I did not get a satisfactory reply from the LRC\n              </span>\n              <br></br>\n              <br></br>\n              3.Add a comment to help us improve the LRC’s general services\n              <span>\n                <input\n                  className=\"ComMent\"\n                  placeholder=\"Enter your Comment here\"\n                  type=\"text\"\n                  name=\"Comment\"\n                  height=\"70%\"\n                  //noValidate\n                  // onChange={this.handleChange}\n                />\n              </span>\n              <br></br>\n              4.Which language(s) would you use to access publications? (check\n              all that apply)\n              <span>\n                <input type=\"checkbox\" name=\"chooseone\" value=\"Arabic\" />\n                Arabic<br></br>\n                <input type=\"checkbox\" name=\"chooseone\" value=\"English\" />\n                English<br></br>\n                <input type=\"checkbox\" name=\"chooseone\" value=\"French\" />\n                French<br></br>\n                <input type=\"checkbox\" name=\"chooseone\" value=\"Portuguese\" />\n                Portuguese<br></br>\n                <input type=\"checkbox\" name=\"chooseone\" value=\"Spanish\" />\n                Spanish<br></br>\n                <input type=\"checkbox\" name=\"chooseone\" value=\"Other\" />\n                <input type=\"text\" name=\"other\" value=\"\" placeholder=\"Other\" />\n                <br></br>\n              </span>\n              5.We have recently automated several functions in the LRC through\n              the use of an email bot. The bot manages subscriptions. Which best\n              describes your opinion?<br></br>\n              <span>\n                <input\n                  type=\"radio\"\n                  name=\"chooseone\"\n                  value=\"I have not used the email bot\"\n                />\n                I have not used the email bot<br></br>\n                <input\n                  type=\"radio\"\n                  name=\"chooseone\"\n                  value=\"I am unable to use the services when delivered by the bot\"\n                />\n                I am unable to use the services when delivered by the bot\n                <br></br>\n                <input\n                  type=\"radio\"\n                  name=\"chooseone\"\n                  value=\"I am happy about using the bot\"\n                />\n                I am happy about using the bot\n              </span>\n              <br></br>\n              <br></br>\n              6.Add a comment to help us improve the bot <br></br>\n              <span>\n                <input\n                  className=\"ComMent\"\n                  placeholder=\"Enter your Comment here\"\n                  type=\"text\"\n                  name=\"Comment\"\n                  height=\"70%\"\n                  //noValidate\n                  // onChange={this.handleChange}\n                />\n              </span>{\" \"}\n              <br></br>\n              7.We have recently started distributing books using the Amazon\n              Cloud Reader in Kindle format. Which best describes your opinion?\n              <br></br>\n              <span>\n                <input\n                  type=\"radio\"\n                  name=\"chooseone\"\n                  value=\"I am pleased with the books I have read using this service\"\n                />\n                I am pleased with the books I have read using this service\n                <br></br>\n                <input\n                  type=\"radio\"\n                  name=\"chooseone\"\n                  value=\"I cannot read books in a browser, I would prefer using a Kindle device or app\"\n                />\n                I cannot read books in a browser, I would prefer using a Kindle\n                device or app<br></br>\n                <input\n                  type=\"radio\"\n                  name=\"chooseone\"\n                  value=\"I cannot read e-books. I need to read them on paper\"\n                />\n                I cannot read e-books. I need to read them on paper\n                <input\n                  type=\"radio\"\n                  name=\"chooseone\"\n                  value=\"I did not manage to access books using this service\"\n                />\n                I did not manage to access books using this service\n                <input\n                  type=\"radio\"\n                  name=\"chooseone\"\n                  value=\"I have not used the service\"\n                />\n                I have not used the service\n              </span>\n              <br></br>\n              <br></br>\n              6.Add a comment to help us improve the Amazon Cloud Reader E-book\n              service <br></br>\n              <span>\n                <input\n                  className=\"ComMent\"\n                  placeholder=\"Enter your Comment here\"\n                  type=\"text\"\n                  name=\"Comment\"\n                  height=\"70%\"\n                  //noValidate\n                  //onChange={this.handleChange}\n                />\n              </span>{\" \"}\n              <br></br>\n              <b style={{ color: \"Blue\" }}>Are you A WFP Employee?</b>\n              <div>\n                <b>NO</b>&nbsp;&nbsp;\n                <label class=\"switch\">\n                  <input type=\"checkbox\"></input>\n                  <span class=\"slider round\"></span>\n                </label>\n                &nbsp;&nbsp;<b>YES</b>\n              </div>\n              <p\n                style={{\n                  color: \"black\",\n                  fontSize: \"20px\",\n                  textDecoration: \"underline\"\n                }}\n              >\n                <strong>\n                  <i>DETAILS OF THE EMPLOYEE</i>\n                </strong>\n              </p>\n              <div id=\"Register\">\n                <div className=\"FULL NAME\">\n                  <label htmlFor=\"FULL NAME\">FIRST NAME</label>\n                  <input\n                    className=\"firstname\"\n                    placeholder=\"FIRST NAME\"\n                    type=\"text\"\n                    name=\"firstname\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                  <div style={{ fontSize: 12, color: \"red\" }}>\n                    {this.firstnameError}\n                  </div>\n                  <label htmlFor=\"Last Name\"> LAST NAME</label>\n                  <input\n                    className=\"Lastname\"\n                    placeholder=\"LAST NAME\"\n                    type=\"text\"\n                    name=\"LastName\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                  <div style={{ fontSize: 12, color: \"red\" }}>\n                    {this.state.LastNameError}\n                  </div>\n                </div>\n                <div className=\"EMAIL\">\n                  <label htmlFor=\"EMAIL\">EMAIL</label>\n                  <input\n                    className=\"Email\"\n                    placeholder=\"EMAIL\"\n                    type=\"text\"\n                    name=\"EMAIL\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                  <div style={{ fontSize: 12, color: \"red\" }}>\n                    {this.state.EmailError}\n                  </div>\n                </div>\n                <div className=\"DIVISION\">\n                  <label htmlFor=\"DIVISION\">DIVISION</label>\n                  <input\n                    className=\"Division\"\n                    placeholder=\"DIVISION\"\n                    type=\"text\"\n                    name=\"DIVISION\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"Country\">\n                  <label htmlFor=\"Country\">Country</label>\n                  <select\n                    id=\"country\"\n                    name=\"Country\"\n                    placeholder=\"Country\"\n                    requireds\n                  >\n                    <option value=\"Country\">Country</option>\n                    <option value=\"America\">America</option>\n                    <option value=\"Italy\">Italy</option>\n                    <option value=\"Uganda\">Uganda</option>\n                    <option value=\"Brazil\">Brazil</option>\n                    <option value=\"Canada\">Canada</option>\n                    <option value=\"Japan\">Japan</option>\n                  </select>\n                </div>\n                <br></br>\n              </div>\n              <div className=\"SubmitForm\">\n                <button type=\"submit\" id=\"SUBMIT\">\n                  SUBMIT SURVEY\n                </button>\n                <br></br>\n                <br></br>\n              </div>\n              <small style={{ textAlign: \"center\" }}>\n                Thank you for your time rendered\n              </small>\n              <br></br>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}